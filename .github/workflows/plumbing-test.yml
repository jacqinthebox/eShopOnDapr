name: plumbing-test

on:
  workflow_dispatch:

env:
  ENVIRONMENT: sandbox-one #kube-dev #TODO
  ESHOP_NAMESPACE: eshop

jobs:
  config-aks:
    runs-on: ubuntu-latest
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: ${{ env.ENVIRONMENT }}-cluster-rg
        cluster-name: ${{ env.ENVIRONMENT }}-cluster

    - name: Get code from the repository
      uses: actions/checkout@v1
      with:
        ref: main

    - name: Helm tool installer
      uses: Azure/setup-helm@v1

    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
   
    - name: dapr
      run: |
        helm repo add dapr https://dapr.github.io/helm-charts/ && helm repo update
        helm upgrade --install dapr dapr/dapr --namespace dapr-system --create-namespace --wait

    - name: eshop namespaces
      run: |
        echo $ | kubectl create ns ${{ env.ESHOP_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

    - name: cert-manager
      run: |
        echo $ | kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml
        echo $ | kubectl apply -f './deploy/cert-manager/staging-issuer.yaml' --namespace ${{ env.ESHOP_NAMESPACE }}
        echo $ | kubectl apply -f './deploy/cert-manager/prod-issuer.yaml' --namespace ${{ env.ESHOP_NAMESPACE }}

    - name: ingress-controller
      run: |
        echo $ | helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        echo $ | helm repo update
        echo $ | helm upgrade --install eshop-new ingress-nginx/ingress-nginx  --namespace kube-ingress --create-namespace


    - name: add pod identities
      run: |
        echo $ | az feature register --name EnablePodIdentityPreview --namespace Microsoft.ContainerService
        echo $ | az extension add --name aks-preview && az extension update --name aks-preview
        echo $ | SQL_RESOURCEID=$(az identity show --name sql-server-identity --resource-group ${{ env.ENVIRONMENT }}-cluster-nodes-rg   --query id -o tsv)
        echo $ | az aks pod-identity add --resource-group ${{ env.ENVIRONMENT }}-cluster-rg --cluster-name ${{ env.ENVIRONMENT }}-cluster --namespace  ${{ env.ESHOP_NAMESPACE }} --name sql-server-identity --identity-resource-id $SQL_RESOURCEID
        echo $ | SB_RESOURCEID=$(az identity show --name service-bus-identity --resource-group ${{ env.ENVIRONMENT }}-cluster-nodes-rg --query id -o tsv)
        echo $ | az aks pod-identity add --resource-group ${{ env.ENVIRONMENT }}-cluster-rg --cluster-name ${{ env.ENVIRONMENT }}-cluster --namespace  ${{ env.ESHOP_NAMESPACE }} --name service-bus-identity --identity-resource-id $SB_RESOURCEID
