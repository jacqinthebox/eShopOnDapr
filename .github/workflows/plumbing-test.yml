name: plumbing-test

on:
  workflow_dispatch:
#  push:
#    branches:
#      main

env:
  ENVIRONMENT: kube-demo-a #kube-dev #this is the cluster prefix #TODO
  ENV_SHORT: demo #e.g. dev, tst, prd
  ESHOP_NAMESPACE: eshop
  HOST_NAME: demo.eshop
  DOMAIN_NAME: luthorcorp.nl
  DNS_RESOURCEGROUP: demo01-rg
  DNS_SUBSCRIPTION: demo01

jobs:
  aks-plumbing:
    runs-on: ubuntu-latest
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: ${{ env.ENVIRONMENT }}-cluster-rg
        cluster-name: ${{ env.ENVIRONMENT }}-cluster

    - name: Get code from the repository
      uses: actions/checkout@v1
      with:
        ref: main

    - name: Helm tool installer
      uses: Azure/setup-helm@v1

    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: dapr
      run: |
        helm repo add dapr https://dapr.github.io/helm-charts/ && helm repo update
        helm upgrade --install dapr dapr/dapr --namespace dapr-system --create-namespace --wait

    - name: create namespaces
      run: |
        echo $ | kubectl create ns ${{ env.ESHOP_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
        echo $ | kubectl create ns monitoring --dry-run=client -o yaml | kubectl apply -f -


    - name: cert-manager
      run: |
        echo $ | kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml

    - name: ingress-controller
      run: |
        echo $ | helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        echo $ | helm repo update
        echo $ | helm upgrade --install ${{ env.ENVIRONMENT }} ingress-nginx/ingress-nginx  --namespace kube-ingress --create-namespace


    - name: add pod identities
      run: |
        echo $ | az feature register --name EnablePodIdentityPreview --namespace Microsoft.ContainerService
        echo $ | az extension add --name aks-preview && az extension update --name aks-preview
        echo $ | az aks pod-identity add --resource-group ${{ env.ENVIRONMENT }}-cluster-rg --cluster-name ${{ env.ENVIRONMENT }}-cluster --namespace  ${{ env.ESHOP_NAMESPACE }} --name sql-server-identity --identity-resource-id $(az identity show --name ${{ env.ENVIRONMENT }}-sql-server-identity --resource-group ${{ env.ENVIRONMENT }}-cluster-nodes-rg --query id -o tsv)
        echo $ | az aks pod-identity add --resource-group ${{ env.ENVIRONMENT }}-cluster-rg --cluster-name ${{ env.ENVIRONMENT }}-cluster --namespace  ${{ env.ESHOP_NAMESPACE }} --name service-bus-identity --identity-resource-id $(az identity show --name service-bus-identity --resource-group ${{ env.ENVIRONMENT }}-cluster-nodes-rg --query id -o tsv)
        echo $ | az aks pod-identity add --resource-group ${{ env.ENVIRONMENT }}-cluster-rg --cluster-name ${{ env.ENVIRONMENT }}-cluster --namespace  ${{ env.ESHOP_NAMESPACE }} --name key-vault-identity --identity-resource-id $(az identity show --name key-vault-identity --resource-group ${{ env.ENVIRONMENT }}-cluster-nodes-rg --query id -o tsv)


    - name: add lets-encrypt issuers
      run: |
        echo $ | kubectl apply -f './deploy/cert-manager/staging-issuer.yaml' --namespace ${{ env.ESHOP_NAMESPACE }}
        echo $ | kubectl apply -f './deploy/cert-manager/prod-issuer.yaml' --namespace ${{ env.ESHOP_NAMESPACE }}

    - name: add prometheus
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        helm upgrade --install prometheus prometheus-community/prometheus --namespace monitoring \
          --set server.ingress=true \
          --set server.ingress.annotations="kubernetes.io/ingress.class: nginx"
          --set server.ingress.hosts[0]=prometheus.${{ env.ENV_SHORT }}.${{ env.DOMAIN_NAME }}

    - name: add grafana
      run: |
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update
        helm upgrade --install grafana grafana/grafana --namespace monitoring \
          --set ingress.enabled=true \
          --set ingress.hosts[0]=grafana.${{ env.ENV_SHORT }}.${{ env.DOMAIN_NAME }} \
          --set ingress.annotations="kubernetes.io/ingress.class: nginx"

    - name: add dns records
      run: |
        LOADBALANCER_IP=$(kubectl get service --namespace kube-ingress ${{ env.ENVIRONMENT }}-ingress-nginx-controller  | awk {'print $4'} | tail -1)
        echo $LOADBALANCER_IP
        az account set --subscription ${{ env.DNS_SUBSCRIPTION }}
        az network dns record-set a add-record --resource-group ${{ env.DNS_RESOURCEGROUP }} --zone-name ${{ env.DOMAIN_NAME }} --record-set-name blazor-client.${{ env.HOST_NAME }} --ipv4-address $LOADBALANCER_IP --ttl 60
        az network dns record-set a add-record --resource-group ${{ env.DNS_RESOURCEGROUP }} --zone-name ${{ env.DOMAIN_NAME }} --record-set-name identity-api.${{ env.HOST_NAME }} --ipv4-address $LOADBALANCER_IP --ttl 60
        az network dns record-set a add-record --resource-group ${{ env.DNS_RESOURCEGROUP }} --zone-name ${{ env.DOMAIN_NAME }} --record-set-name seq.${{ env.HOST_NAME }} --ipv4-address $LOADBALANCER_IP --ttl 60
        az network dns record-set a add-record --resource-group ${{ env.DNS_RESOURCEGROUP }} --zone-name ${{ env.DOMAIN_NAME }} --record-set-name webshopping-gw.${{ env.HOST_NAME }} --ipv4-address $LOADBALANCER_IP --ttl 60
        az network dns record-set a add-record --resource-group ${{ env.DNS_RESOURCEGROUP }} --zone-name ${{ env.DOMAIN_NAME }} --record-set-name prometheus.${{ env.ENV_SHORT }} --ipv4-address $LOADBALANCER_IP --ttl 60
        az network dns record-set a add-record --resource-group ${{ env.DNS_RESOURCEGROUP }} --zone-name ${{ env.DOMAIN_NAME }} --record-set-name grafana.${{ env.ENV_SHORT }} --ipv4-address $LOADBALANCER_IP --ttl 60
