name: plumbing

# Only trigger, when the infrastructure deployment succeeded
on:
  workflow_run:
    workflows: ["kube-dev-cluster"]
    types:
      - completed

env:
  ENVIRONMENT: kube-dev #TODO
  ESHOP_NAMESPACE: eshop

jobs:
  config-aks:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: ${{ env.ENVIRONMENT }}-cluster-rg
        cluster-name: ${{ env.ENVIRONMENT }}-cluster

    - name: Get code from the repository
      uses: actions/checkout@v1
      with:
        ref: main

    - name: Helm tool installer
      uses: Azure/setup-helm@v1

    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
   
    - name: dapr
      run: |
        helm repo add dapr https://dapr.github.io/helm-charts/ && helm repo update
        helm upgrade --install dapr dapr/dapr --namespace dapr-system --create-namespace --wait
          
    - name: cert-manager
      run: |
        echo $ | kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml
        echo $ | kubectl create ns ${{ env.ESHOP_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
        echo $ | kubectl apply -f './deploy/cert-manager/staging-issuer.yaml' --namespace ${{ env.ESHOP_NAMESPACE }}
        echo $ | kubectl apply -f './deploy/cert-manager/prod-issuer.yaml' --namespace ${{ env.ESHOP_NAMESPACE }}

    - name: ingress-controller
      run: |
        echo $ | helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        echo $ | helm repo update
        exho $ | helm upgrade --install eshop-new ingress-nginx/ingress-nginx  --namespace kube-ingress --create-namespace

