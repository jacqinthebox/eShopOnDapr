name: basket-api

on:
  workflow_dispatch:
  push:
    branches:
    - main

    paths:
    - src/BuildingBlocks/**
    - src/Services/Basket/**
    - .github/workflows/basket-api.yml
  
  pull_request:
    branches:
    - main

    paths:
    - src/BuildingBlocks/**
    - src/Services/Basket/**
    - .github/workflows/basket-api.yml
    
env:
  SERVICE: basket-api
  IMAGE: basket.api
  DOTNET_VERSION: 6.0.x
  USE_DOTNET_PREVIEW: true
  HELM_EXPERIMENTAL_OCI: 1
  HELM_VERSION_TO_INSTALL: 3.8.0
  ACR_NAME: demo01cr
  ACR_REPO_NAME: helm-eshop
  CHART_VERSION: 1.1 # check if we will use commit sha

jobs:
  BuildContainersForPR_Linux:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@master
    
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        include-prerelease: ${{ env.USE_DOTNET_PREVIEW }}

    - name: Build
      run: |
        dotnet restore "src/Services/Basket/Basket.API/Basket.API.csproj"
        cd src/Services/Basket/Basket.API
        dotnet build --no-restore

    - name: Compose build ${{ env.SERVICE }}
      run: sudo -E docker-compose build ${{ env.SERVICE }}
      working-directory: ./src
      shell: bash
      env:
        TAG: ${{ env.BRANCH }}
        REGISTRY: ${{ secrets.REGISTRY_ENDPOINT }}

  BuildLinux:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@master

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        include-prerelease: ${{ env.USE_DOTNET_PREVIEW }}

    - name: Build
      run: |
        dotnet restore "src/Services/Basket/Basket.API/Basket.API.csproj"
        cd src/Services/Basket/Basket.API
        dotnet build --no-restore

    - name: Enable experimental features for the Docker daemon and CLI
      run: |
          echo $'{\n  "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          mkdir -p ~/.docker
          echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
          sudo service docker restart
          docker version -f '{{.Client.Experimental}}'
          docker version -f '{{.Server.Experimental}}'

    - name: Login to Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_ENDPOINT }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}

    - name: Compose build ${{ env.SERVICE }}
      run: sudo -E docker-compose build ${{ env.SERVICE }}
      working-directory: ./src
      shell: bash
      env:
        REGISTRY: ${{ secrets.REGISTRY_ENDPOINT }}
        TAG: ${{ github.sha }}

    - name: Compose push ${{ env.SERVICE }}
      run: sudo -E docker-compose push ${{ env.SERVICE }}
      working-directory: ./src
      shell: bash
      env:
        REGISTRY: ${{ secrets.REGISTRY_ENDPOINT }}
        TAG: ${{ github.sha }}

  BuildHelmChart:
    name: publish Helm chart to acr
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: actions/checkout@v2
        name: checkout repo
      
      - name: install helm
        uses: Azure/setup-helm@v1
        # with:
        #   version: ${{ env.HELM_VERSION_TO_INSTALL }}# default is latest
      
      - name: login to acr using helm
        run: |
          echo $ | helm registry login  ${{ env.ACR_NAME }}.azurecr.io --username ${{ secrets.USERNAME }} --password ${{ secrets.PASSWORD }}
      
      - name: save helm chart to local registry
        run: |
          helm package deploy/charts/eshop --version ${{ env.CHART_VERSION }}
            
      - name: Azure Login
        uses: Azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: publish chart to acr
        run: |
          helm push eshopondapr-${{ env.CHART_VERSION }}.tgz oci://${{ env.ACR_NAME }}.azurecr.io/helm

      - name: deploy eshop
        run: |
          echo $ | helm upgrade --install eshop oci://demo01cr.azurecr.io/helm/eshopondapr --version 1.1 --set ingress.certManager.environment=prod,basketApiImageTag=${{ github.sha }}
