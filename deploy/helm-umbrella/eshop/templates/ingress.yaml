apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  namespace: {{ .Values.global.namespace }}
  annotations:
    app.kubernetes.io/instance: {{ .Release.Name }}
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/force-ssl-redirect: {{ .Values.global.ingress.forceSSLRedirect | quote }}
    {{- if and (eq .Values.global.ingress.certManager.enabled true ) (eq .Values.global.ingress.certManager.environment "prod") }}
    {{- template "cert-manager-prod.annotations" }}
    {{- end }}
    {{- if and (eq .Values.global.ingress.certManager.enabled true ) (eq .Values.global.ingress.certManager.environment "staging") }}
    {{- template "cert-manager-staging.annotations" }}
    {{- end }}
spec:
  {{- if .Values.global.ingress.tls }}
  tls:
    {{- range .Values.global.ingress.tls }}
    - hosts:
      {{- range .hosts }}
      - {{ . }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
  {{- end }}
  rules:
    - host: {{ .Values.global.apiGatewayUrlExternal }}
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: apigateway
                port:
                  number: 80
    - host: {{ .Values.global.blazorClientUrlExternal }}
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: blazor-client
                port:
                  number: 80
    - host: {{ .Values.global.identityUrlExternal }}
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: identity-api
                port:
                  number: 80